<Window x:Class="Plmeco.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:Plmeco.App.Converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="PLMECO Transporte"
        Height="600"
        Width="1000">

    <!-- Recursos -->
    <Window.Resources>
        <conv:TimeSpanConverter x:Key="TsConv"/>
        <conv:EqualsIgnoreCaseConverter x:Key="EqI"/>
        <conv:NotEmptyConverter x:Key="NotEmpty"/>

        <!-- Paleta -->
        <SolidColorBrush x:Key="RowGreen"   Color="#DFF6DD"/>
        <SolidColorBrush x:Key="RowRed"     Color="#F8D7DA"/>
        <SolidColorBrush x:Key="CellGreen"  Color="#D4EDDA"/>
        <SolidColorBrush x:Key="CellOrange" Color="#FFE5B4"/>
        <SolidColorBrush x:Key="TextDarkRed" Color="#7A0010"/>

        <!-- Texto negro por defecto (contenido de celdas) -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <!-- ðŸ”’ Texto negro tambiÃ©n cuando la celda estÃ¡ seleccionada -->
        <Style TargetType="DataGridCell">
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Fila: LEX => verde; CAMION ANULADO => rojo -->
        <Style x:Key="CargasRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="{x:Null}"/>
            <Style.Triggers>
                <!-- LEX marcado: fila verde -->
                <DataTrigger Binding="{Binding Lex}" Value="True">
                    <Setter Property="Background" Value="{StaticResource RowGreen}"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                </DataTrigger>

                <!-- CAMION ANULADO: fila roja + texto granate -->
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Path="Estado" Converter="{StaticResource EqI}" ConverterParameter="CAMION ANULADO"/>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="{StaticResource RowRed}"/>
                    <Setter Property="Foreground" Value="{StaticResource TextDarkRed}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- DESTINO verde si ESTADO = OK (case-insensitive) -->
        <Style x:Key="DestinoCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Path="Estado" Converter="{StaticResource EqI}" ConverterParameter="OK"/>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="{StaticResource CellGreen}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- ESTADO naranja si CARGANDO (case-insensitive) -->
        <Style x:Key="EstadoCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Path="Estado" Converter="{StaticResource EqI}" ConverterParameter="CARGANDO"/>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="{StaticResource CellOrange}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- INCIDENCIAS naranja si NO vacÃ­o -->
        <Style x:Key="IncidenciasCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Path="Incidencias" Converter="{StaticResource NotEmpty}"/>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="{StaticResource CellOrange}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!-- Atajos -->
    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="{x:Static ApplicationCommands.Save}"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="{x:Static ApplicationCommands.SaveAs}"/>
    </Window.InputBindings>

    <Grid>
        <DockPanel>

            <!-- MENÃš -->
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_Archivo">
                    <MenuItem Header="_Guardar" Click="Guardar_Click" InputGestureText="Ctrl+S"/>
                    <MenuItem Header="Guardar _como..." Click="GuardarComo_Click" InputGestureText="Ctrl+Shift+S"/>
                    <Separator/>
                    <MenuItem Header="_Salir" Click="Salir_Click"/>
                </MenuItem>
            </Menu>

            <!-- Importar -->
            <Button DockPanel.Dock="Top" Content="Importar Excel" Click="Importar_Click" Margin="5"/>

            <!-- Tabla -->
            <DataGrid x:Name="dgCargas"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      MouseDoubleClick="DataGrid_MouseDoubleClick"
                      RowStyle="{StaticResource CargasRowStyle}"
                      Foreground="Black">

                <DataGrid.Columns>
                    <DataGridTextColumn Header="MATRICULA" Binding="{Binding Matricula}" Width="*"/>
                    <DataGridTextColumn Header="DESTINO"   Binding="{Binding Destino}"  Width="*"
                                        CellStyle="{StaticResource DestinoCellStyle}"/>
                    <DataGridTextColumn Header="MUELLE"    Binding="{Binding Muelle}"   Width="0.6*"/>
                    <DataGridTextColumn Header="ESTADO"    Binding="{Binding Estado}"   Width="0.6*"
                                        CellStyle="{StaticResource EstadoCellStyle}"/>

                    <!-- Horas (editables) -->
                    <DataGridTextColumn Header="LLEGADA REAL"
                        Binding="{Binding LlegadaReal, Converter={StaticResource TsConv}, UpdateSourceTrigger=LostFocus}"
                        Width="0.8*"/>
                    <DataGridTextColumn Header="SALIDA REAL"
                        Binding="{Binding SalidaReal, Converter={StaticResource TsConv}, UpdateSourceTrigger=LostFocus}"
                        Width="0.8*"/>
                    <DataGridTextColumn Header="SALIDA TOPE"
                        Binding="{Binding SalidaTope, Converter={StaticResource TsConv}}"
                        IsReadOnly="True" Width="0.8*"/>

                    <!-- Incidencias -->
                    <DataGridTextColumn Header="INCIDENCIAS"
                                        Binding="{Binding Incidencias}"
                                        CellStyle="{StaticResource IncidenciasCellStyle}"
                                        Width="*"/>

                    <DataGridCheckBoxColumn Header="LEX" Binding="{Binding Lex}" Width="0.5*"/>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </Grid>
</Window>
